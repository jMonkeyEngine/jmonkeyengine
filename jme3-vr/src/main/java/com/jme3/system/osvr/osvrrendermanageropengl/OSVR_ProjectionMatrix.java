package com.jme3.system.osvr.osvrrendermanageropengl;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OSVR_ProjectionMatrix extends Structure {
	public double left;
	public double right;
	public double top;
	public double bottom;
	/** Cannot name "near" because Visual Studio keyword */
	public double nearClip;
	public double farClip;
	public OSVR_ProjectionMatrix() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("left", "right", "top", "bottom", "nearClip", "farClip");
	}
	/** @param nearClip Cannot name "near" because Visual Studio keyword */
	public OSVR_ProjectionMatrix(double left, double right, double top, double bottom, double nearClip, double farClip) {
		super();
		this.left = left;
		this.right = right;
		this.top = top;
		this.bottom = bottom;
		this.nearClip = nearClip;
		this.farClip = farClip;
	}
	public OSVR_ProjectionMatrix(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OSVR_ProjectionMatrix implements Structure.ByReference {
		
	};
	public static class ByValue extends OSVR_ProjectionMatrix implements Structure.ByValue {
		
	};
}
