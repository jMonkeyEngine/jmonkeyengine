package com.jme3.system.osvr.osvrclientreporttypes;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OSVR_VelocityState extends Structure {
	/** C type : OSVR_LinearVelocityState */
	public OSVR_Vec3 linearVelocity;
	/** C type : OSVR_CBool */
	public byte linearVelocityValid;
	/** C type : OSVR_AngularVelocityState */
	public OSVR_IncrementalQuaternion angularVelocity;
	/** C type : OSVR_CBool */
	public byte angularVelocityValid;
	public OSVR_VelocityState() {
		super();
	}
        @Override
	protected List<String> getFieldOrder() {
		return Arrays.asList("linearVelocity", "linearVelocityValid", "angularVelocity", "angularVelocityValid");
	}
	/**
	 * @param linearVelocity C type : OSVR_LinearVelocityState<br>
	 * @param linearVelocityValid C type : OSVR_CBool<br>
	 * @param angularVelocity C type : OSVR_AngularVelocityState<br>
	 * @param angularVelocityValid C type : OSVR_CBool
	 */
	public OSVR_VelocityState(OSVR_Vec3 linearVelocity, byte linearVelocityValid, OSVR_IncrementalQuaternion angularVelocity, byte angularVelocityValid) {
		super();
		this.linearVelocity = linearVelocity;
		this.linearVelocityValid = linearVelocityValid;
		this.angularVelocity = angularVelocity;
		this.angularVelocityValid = angularVelocityValid;
	}
	public OSVR_VelocityState(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OSVR_VelocityState implements Structure.ByReference {
		
	};
	public static class ByValue extends OSVR_VelocityState implements Structure.ByValue {
		
	};
}
