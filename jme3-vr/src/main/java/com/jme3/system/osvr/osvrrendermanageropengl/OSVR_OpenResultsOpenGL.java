package com.jme3.system.osvr.osvrrendermanageropengl;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OSVR_OpenResultsOpenGL extends Structure {
	/**
	 * C type : OSVR_OpenStatus
	 */
	public int status;
	/** C type : OSVR_GraphicsLibraryOpenGL */
	public OSVR_GraphicsLibraryOpenGL library;
	/** C type : OSVR_RenderBufferOpenGL */
	public OSVR_RenderBufferOpenGL buffers;
	public OSVR_OpenResultsOpenGL() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("status", "library", "buffers");
	}
	/**
	 * @param status @see OsvrRenderManagerOpenGLLibrary.OSVR_OpenStatus <br>
	 * C type : OSVR_OpenStatus<br>
	 * @param library C type : OSVR_GraphicsLibraryOpenGL<br>
	 * @param buffers C type : OSVR_RenderBufferOpenGL
	 */
	public OSVR_OpenResultsOpenGL(int status, OSVR_GraphicsLibraryOpenGL library, OSVR_RenderBufferOpenGL buffers) {
		super();
		this.status = status;
		this.library = library;
		this.buffers = buffers;
	}
	public OSVR_OpenResultsOpenGL(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends OSVR_OpenResultsOpenGL implements Structure.ByReference {
		
	};
	public static class ByValue extends OSVR_OpenResultsOpenGL implements Structure.ByValue {
		
	};
}
