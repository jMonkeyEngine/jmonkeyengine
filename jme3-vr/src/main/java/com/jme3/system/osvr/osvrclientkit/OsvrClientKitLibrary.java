package com.jme3.system.osvr.osvrclientkit;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.PointerByReference;
/**
 * JNA Wrapper for library <b>osvrClientKit</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class OsvrClientKitLibrary implements Library {
	public static final String JNA_LIBRARY_NAME = "osvrClientKit";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(OsvrClientKitLibrary.JNA_LIBRARY_NAME);
	static {
            Native.register(OsvrClientKitLibrary.class, OsvrClientKitLibrary.JNA_NATIVE_LIB);
	}
	/**
	 * Initialize the library.
	 * @param applicationIdentifier A null terminated string identifying your<br>
	 * application. Reverse DNS format strongly suggested.<br>
	 * @param flags initialization options (reserved) - pass 0 for now.<br>
	 * @return Client context - will be needed for subsequent calls<br>
	 * Original signature : <code>OSVR_ClientContext osvrClientInit(const char[], uint32_t)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrClientInit(byte[], int)}
         * instead
	 */
	@Deprecated 
	public static native OsvrClientKitLibrary.OSVR_ClientContext osvrClientInit(Pointer applicationIdentifier, int flags);
	/**
	 * Initialize the library.
	 * @param applicationIdentifier A null terminated string identifying your<br>
	 * application. Reverse DNS format strongly suggested.<br>
	 * @param flags initialization options (reserved) - pass 0 for now.<br>
	 * @return Client context - will be needed for subsequent calls<br>
	 * Original signature : <code>OSVR_ClientContext osvrClientInit(const char[], uint32_t)</code>
	 */
	public static native OsvrClientKitLibrary.OSVR_ClientContext osvrClientInit(byte applicationIdentifier[], int flags);
	/**
	 * Updates the state of the context - call regularly in your mainloop.
	 * @param ctx Client context<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientUpdate(OSVR_ClientContext)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrClientUpdate(OsvrClientKitLibrary.OSVR_ClientContext)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrClientUpdate(Pointer ctx);
	/**
	 * Updates the state of the context - call regularly in your mainloop.
	 * @param ctx Client context<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientUpdate(OSVR_ClientContext)</code>
	 */
	public static native byte osvrClientUpdate(OsvrClientKitLibrary.OSVR_ClientContext ctx);
	/**
	 * Checks to see if the client context is fully started up and connected
	 * properly to a server.<br>
	 * If this reports that the client context is not OK, there may not be a server<br>
	 * running, or you may just have to call osvrClientUpdate() a few times to<br>
	 * permit startup to finish. The return value of this call will not change from<br>
	 * failure to success without calling osvrClientUpdate().<br>
	 * @param ctx Client context<br>
	 * @return OSVR_RETURN_FAILURE if not yet fully connected/initialized, or if<br>
	 * some other error (null context) occurs.<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientCheckStatus(OSVR_ClientContext)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrClientCheckStatus(com.jme3.system.osvr.osvrclientkit.OsvrClientKitLibrary.OSVR_ClientContext)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrClientCheckStatus(Pointer ctx);
	/**
	 * Checks to see if the client context is fully started up and connected
	 * properly to a server.<br>
	 * If this reports that the client context is not OK, there may not be a server<br>
	 * running, or you may just have to call osvrClientUpdate() a few times to<br>
	 * permit startup to finish. The return value of this call will not change from<br>
	 * failure to success without calling osvrClientUpdate().<br>
	 * @param ctx Client context<br>
	 * @return OSVR_RETURN_FAILURE if not yet fully connected/initialized, or if<br>
	 * some other error (null context) occurs.<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientCheckStatus(OSVR_ClientContext)</code>
	 */
	public static native byte osvrClientCheckStatus(OsvrClientKitLibrary.OSVR_ClientContext ctx);
	/**
	 * Shut down the library.
	 * @param ctx Client context<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientShutdown(OSVR_ClientContext)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrClientShutdown(OsvrClientKitLibrary.OSVR_ClientContext)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrClientShutdown(Pointer ctx);
	/**
	 * Shut down the library.
	 * @param ctx Client context<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientShutdown(OSVR_ClientContext)</code>
	 */
	public static native byte osvrClientShutdown(OsvrClientKitLibrary.OSVR_ClientContext ctx);
	/**
	 * Log a message from the client.
	 * Original signature : <code>void osvrClientLog(OSVR_ClientContext, OSVR_LogLevel, const char*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrClientLog(com.jme3.system.osvr.osvrclientkit.OsvrClientKitLibrary.OSVR_ClientContext, int, java.lang.String)}
         * instead
	 */
	@Deprecated 
	public static native void osvrClientLog(Pointer ctx, int severity, Pointer message);
	/**
	 * Log a message from the client.
	 * Original signature : <code>void osvrClientLog(OSVR_ClientContext, OSVR_LogLevel, const char*)</code>
	 */
	public static native void osvrClientLog(OsvrClientKitLibrary.OSVR_ClientContext ctx, int severity, String message);
	/**
	 * Get the interface associated with the given path.
	 * @param ctx Client context<br>
	 * @param path A resource path (null-terminated string)<br>
	 * @param iface The interface object. May be freed when no longer needed,<br>
	 * otherwise it will be freed when the context is closed.<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientGetInterface(OSVR_ClientContext, const char[], OSVR_ClientInterface*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrClientGetInterface(com.jme3.system.osvr.osvrclientkit.OsvrClientKitLibrary.OSVR_ClientContext, byte[], com.sun.jna.ptr.PointerByReference)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrClientGetInterface(Pointer ctx, Pointer path, Pointer iface);
	/**
	 * Get the interface associated with the given path.
	 * @param ctx Client context<br>
	 * @param path A resource path (null-terminated string)<br>
	 * @param iface The interface object. May be freed when no longer needed,<br>
	 * otherwise it will be freed when the context is closed.<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientGetInterface(OSVR_ClientContext, const char[], OSVR_ClientInterface*)</code>
	 */
	public static native byte osvrClientGetInterface(OsvrClientKitLibrary.OSVR_ClientContext ctx, byte path[], PointerByReference iface);
	/**
	 * Get the interface associated with the given path.
	 * @param ctx Client context<br>
	 * @param path A resource path (null-terminated string)<br>
	 * @param iface The interface object. May be freed when no longer needed,<br>
	 * otherwise it will be freed when the context is closed.<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientGetInterface(OSVR_ClientContext, const char[], OSVR_ClientInterface*)</code>
	 */
	public static native byte osvrClientGetInterface(Pointer ctx, Pointer path, PointerByReference iface);
	/**
	 * Free an interface object before context closure.
	 * @param ctx Client context<br>
	 * @param iface The interface object<br>
	 * @return OSVR_RETURN_SUCCESS unless a null context or interface was passed<br>
	 * or the given interface was not found in the context (i.e. had already been<br>
	 * freed)<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientFreeInterface(OSVR_ClientContext, OSVR_ClientInterface)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrClientFreeInterface(com.jme3.system.osvr.osvrclientkit.OsvrClientKitLibrary.OSVR_ClientContext, com.jme3.system.osvr.osvrclientkit.OsvrClientKitLibrary.OSVR_ClientInterface)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrClientFreeInterface(Pointer ctx, Pointer iface);
	/**
	 * Free an interface object before context closure.
	 * @param ctx Client context<br>
	 * @param iface The interface object<br>
	 * @return OSVR_RETURN_SUCCESS unless a null context or interface was passed<br>
	 * or the given interface was not found in the context (i.e. had already been<br>
	 * freed)<br>
	 * Original signature : <code>OSVR_ReturnCode osvrClientFreeInterface(OSVR_ClientContext, OSVR_ClientInterface)</code>
	 */
	public static native byte osvrClientFreeInterface(OsvrClientKitLibrary.OSVR_ClientContext ctx, OsvrClientKitLibrary.OSVR_ClientInterface iface);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterPoseCallback(OSVR_ClientInterface, OSVR_PoseCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterPoseCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterPoseCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterPoseCallback(OSVR_ClientInterface, OSVR_PoseCallback, void*)</code> */
	public static native byte osvrRegisterPoseCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterPositionCallback(OSVR_ClientInterface, OSVR_PositionCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterPositionCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterPositionCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterPositionCallback(OSVR_ClientInterface, OSVR_PositionCallback, void*)</code> */
	public static native byte osvrRegisterPositionCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterOrientationCallback(OSVR_ClientInterface, OSVR_OrientationCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterOrientationCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterOrientationCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterOrientationCallback(OSVR_ClientInterface, OSVR_OrientationCallback, void*)</code> */
	public static native byte osvrRegisterOrientationCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterVelocityCallback(OSVR_ClientInterface, OSVR_VelocityCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterVelocityCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterVelocityCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterVelocityCallback(OSVR_ClientInterface, OSVR_VelocityCallback, void*)</code> */
	public static native byte osvrRegisterVelocityCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterLinearVelocityCallback(OSVR_ClientInterface, OSVR_LinearVelocityCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterLinearVelocityCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterLinearVelocityCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterLinearVelocityCallback(OSVR_ClientInterface, OSVR_LinearVelocityCallback, void*)</code> */
	public static native byte osvrRegisterLinearVelocityCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterAngularVelocityCallback(OSVR_ClientInterface, OSVR_AngularVelocityCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterAngularVelocityCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterAngularVelocityCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterAngularVelocityCallback(OSVR_ClientInterface, OSVR_AngularVelocityCallback, void*)</code> */
	public static native byte osvrRegisterAngularVelocityCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterAccelerationCallback(OSVR_ClientInterface, OSVR_AccelerationCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterAccelerationCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterAccelerationCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterAccelerationCallback(OSVR_ClientInterface, OSVR_AccelerationCallback, void*)</code> */
	public static native byte osvrRegisterAccelerationCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterLinearAccelerationCallback(OSVR_ClientInterface, OSVR_LinearAccelerationCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterLinearAccelerationCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterLinearAccelerationCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterLinearAccelerationCallback(OSVR_ClientInterface, OSVR_LinearAccelerationCallback, void*)</code> */
	public static native byte osvrRegisterLinearAccelerationCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterAngularAccelerationCallback(OSVR_ClientInterface, OSVR_AngularAccelerationCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterAngularAccelerationCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterAngularAccelerationCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterAngularAccelerationCallback(OSVR_ClientInterface, OSVR_AngularAccelerationCallback, void*)</code> */
	public static native byte osvrRegisterAngularAccelerationCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterButtonCallback(OSVR_ClientInterface, OSVR_ButtonCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterButtonCallback(com.jme3.system.osvr.osvrclientkit.OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Callback, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterButtonCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterButtonCallback(OSVR_ClientInterface, OSVR_ButtonCallback, void*)</code> */
	public static native byte osvrRegisterButtonCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Callback cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterAnalogCallback(OSVR_ClientInterface, OSVR_AnalogCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterAnalogCallback(com.jme3.system.osvr.osvrclientkit.OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Callback, com.sun.jna.Pointer)} 
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterAnalogCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterAnalogCallback(OSVR_ClientInterface, OSVR_AnalogCallback, void*)</code> */
	public static native byte osvrRegisterAnalogCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Callback cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterImagingCallback(OSVR_ClientInterface, OSVR_ImagingCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterImagingCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterImagingCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterImagingCallback(OSVR_ClientInterface, OSVR_ImagingCallback, void*)</code> */
	public static native byte osvrRegisterImagingCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterLocation2DCallback(OSVR_ClientInterface, OSVR_Location2DCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterLocation2DCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterLocation2DCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterLocation2DCallback(OSVR_ClientInterface, OSVR_Location2DCallback, void*)</code> */
	public static native byte osvrRegisterLocation2DCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterDirectionCallback(OSVR_ClientInterface, OSVR_DirectionCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterDirectionCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterDirectionCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterDirectionCallback(OSVR_ClientInterface, OSVR_DirectionCallback, void*)</code> */
	public static native byte osvrRegisterDirectionCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterEyeTracker2DCallback(OSVR_ClientInterface, OSVR_EyeTracker2DCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterEyeTracker2DCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterEyeTracker2DCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterEyeTracker2DCallback(OSVR_ClientInterface, OSVR_EyeTracker2DCallback, void*)</code> */
	public static native byte osvrRegisterEyeTracker2DCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterEyeTracker3DCallback(OSVR_ClientInterface, OSVR_EyeTracker3DCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterEyeTracker3DCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterEyeTracker3DCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterEyeTracker3DCallback(OSVR_ClientInterface, OSVR_EyeTracker3DCallback, void*)</code> */
	public static native byte osvrRegisterEyeTracker3DCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterEyeTrackerBlinkCallback(OSVR_ClientInterface, OSVR_EyeTrackerBlinkCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterEyeTrackerBlinkCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterEyeTrackerBlinkCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterEyeTrackerBlinkCallback(OSVR_ClientInterface, OSVR_EyeTrackerBlinkCallback, void*)</code> */
	public static native byte osvrRegisterEyeTrackerBlinkCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterNaviVelocityCallback(OSVR_ClientInterface, OSVR_NaviVelocityCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterNaviVelocityCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterNaviVelocityCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterNaviVelocityCallback(OSVR_ClientInterface, OSVR_NaviVelocityCallback, void*)</code> */
	public static native byte osvrRegisterNaviVelocityCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	/**
	 * Original signature : <code>OSVR_ReturnCode osvrRegisterNaviPositionCallback(OSVR_ClientInterface, OSVR_NaviPositionCallback, void*)</code><br>
	 * @deprecated use the safer method
         * {@link #osvrRegisterNaviPositionCallback(OsvrClientKitLibrary.OSVR_ClientInterface, com.sun.jna.Pointer, com.sun.jna.Pointer)}
         * instead
	 */
	@Deprecated 
	public static native byte osvrRegisterNaviPositionCallback(Pointer iface, Pointer cb, Pointer userdata);
	/** Original signature : <code>OSVR_ReturnCode osvrRegisterNaviPositionCallback(OSVR_ClientInterface, OSVR_NaviPositionCallback, void*)</code> */
	public static native byte osvrRegisterNaviPositionCallback(OsvrClientKitLibrary.OSVR_ClientInterface iface, Pointer cb, Pointer userdata);
	public static class OSVR_ClientContext extends PointerType {
		public OSVR_ClientContext(Pointer address) {
			super(address);
		}
		public OSVR_ClientContext() {
			super();
		}
	};
	public static class OSVR_ClientInterface extends PointerType {
		public OSVR_ClientInterface(Pointer address) {
			super(address);
		}
		public OSVR_ClientInterface() {
			super();
		}
	};
}
