package com.jme3.system.jopenvr;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.FloatByReference;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : headers\openvr_capi.h:1957</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VR_IVRChaperoneSetup_FnTable extends Structure {
	/** C type : CommitWorkingCopy_callback* */
	public VR_IVRChaperoneSetup_FnTable.CommitWorkingCopy_callback CommitWorkingCopy;
	/** C type : RevertWorkingCopy_callback* */
	public VR_IVRChaperoneSetup_FnTable.RevertWorkingCopy_callback RevertWorkingCopy;
	/** C type : GetWorkingPlayAreaSize_callback* */
	public VR_IVRChaperoneSetup_FnTable.GetWorkingPlayAreaSize_callback GetWorkingPlayAreaSize;
	/** C type : GetWorkingPlayAreaRect_callback* */
	public VR_IVRChaperoneSetup_FnTable.GetWorkingPlayAreaRect_callback GetWorkingPlayAreaRect;
	/** C type : GetWorkingCollisionBoundsInfo_callback* */
	public VR_IVRChaperoneSetup_FnTable.GetWorkingCollisionBoundsInfo_callback GetWorkingCollisionBoundsInfo;
	/** C type : GetLiveCollisionBoundsInfo_callback* */
	public VR_IVRChaperoneSetup_FnTable.GetLiveCollisionBoundsInfo_callback GetLiveCollisionBoundsInfo;
	/** C type : GetWorkingSeatedZeroPoseToRawTrackingPose_callback* */
	public VR_IVRChaperoneSetup_FnTable.GetWorkingSeatedZeroPoseToRawTrackingPose_callback GetWorkingSeatedZeroPoseToRawTrackingPose;
	/** C type : GetWorkingStandingZeroPoseToRawTrackingPose_callback* */
	public VR_IVRChaperoneSetup_FnTable.GetWorkingStandingZeroPoseToRawTrackingPose_callback GetWorkingStandingZeroPoseToRawTrackingPose;
	/** C type : SetWorkingPlayAreaSize_callback* */
	public VR_IVRChaperoneSetup_FnTable.SetWorkingPlayAreaSize_callback SetWorkingPlayAreaSize;
	/** C type : SetWorkingCollisionBoundsInfo_callback* */
	public VR_IVRChaperoneSetup_FnTable.SetWorkingCollisionBoundsInfo_callback SetWorkingCollisionBoundsInfo;
	/** C type : SetWorkingSeatedZeroPoseToRawTrackingPose_callback* */
	public VR_IVRChaperoneSetup_FnTable.SetWorkingSeatedZeroPoseToRawTrackingPose_callback SetWorkingSeatedZeroPoseToRawTrackingPose;
	/** C type : SetWorkingStandingZeroPoseToRawTrackingPose_callback* */
	public VR_IVRChaperoneSetup_FnTable.SetWorkingStandingZeroPoseToRawTrackingPose_callback SetWorkingStandingZeroPoseToRawTrackingPose;
	/** C type : ReloadFromDisk_callback* */
	public VR_IVRChaperoneSetup_FnTable.ReloadFromDisk_callback ReloadFromDisk;
	/** C type : GetLiveSeatedZeroPoseToRawTrackingPose_callback* */
	public VR_IVRChaperoneSetup_FnTable.GetLiveSeatedZeroPoseToRawTrackingPose_callback GetLiveSeatedZeroPoseToRawTrackingPose;
	/** C type : SetWorkingCollisionBoundsTagsInfo_callback* */
	public VR_IVRChaperoneSetup_FnTable.SetWorkingCollisionBoundsTagsInfo_callback SetWorkingCollisionBoundsTagsInfo;
	/** C type : GetLiveCollisionBoundsTagsInfo_callback* */
	public VR_IVRChaperoneSetup_FnTable.GetLiveCollisionBoundsTagsInfo_callback GetLiveCollisionBoundsTagsInfo;
	/** C type : SetWorkingPhysicalBoundsInfo_callback* */
	public VR_IVRChaperoneSetup_FnTable.SetWorkingPhysicalBoundsInfo_callback SetWorkingPhysicalBoundsInfo;
	/** C type : GetLivePhysicalBoundsInfo_callback* */
	public VR_IVRChaperoneSetup_FnTable.GetLivePhysicalBoundsInfo_callback GetLivePhysicalBoundsInfo;
	/** C type : ExportLiveToBuffer_callback* */
	public VR_IVRChaperoneSetup_FnTable.ExportLiveToBuffer_callback ExportLiveToBuffer;
	/** C type : ImportFromBufferToWorking_callback* */
	public VR_IVRChaperoneSetup_FnTable.ImportFromBufferToWorking_callback ImportFromBufferToWorking;
	/** <i>native declaration : headers\openvr_capi.h:1937</i> */
	public interface CommitWorkingCopy_callback extends Callback {
		byte apply(int configFile);
	};
	/** <i>native declaration : headers\openvr_capi.h:1938</i> */
	public interface RevertWorkingCopy_callback extends Callback {
		void apply();
	};
	/** <i>native declaration : headers\openvr_capi.h:1939</i> */
	public interface GetWorkingPlayAreaSize_callback extends Callback {
		byte apply(FloatByReference pSizeX, FloatByReference pSizeZ);
	};
	/** <i>native declaration : headers\openvr_capi.h:1940</i> */
	public interface GetWorkingPlayAreaRect_callback extends Callback {
		byte apply(HmdQuad_t rect);
	};
	/** <i>native declaration : headers\openvr_capi.h:1941</i> */
	public interface GetWorkingCollisionBoundsInfo_callback extends Callback {
		byte apply(HmdQuad_t pQuadsBuffer, IntByReference punQuadsCount);
	};
	/** <i>native declaration : headers\openvr_capi.h:1942</i> */
	public interface GetLiveCollisionBoundsInfo_callback extends Callback {
		byte apply(HmdQuad_t pQuadsBuffer, IntByReference punQuadsCount);
	};
	/** <i>native declaration : headers\openvr_capi.h:1943</i> */
	public interface GetWorkingSeatedZeroPoseToRawTrackingPose_callback extends Callback {
		byte apply(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);
	};
	/** <i>native declaration : headers\openvr_capi.h:1944</i> */
	public interface GetWorkingStandingZeroPoseToRawTrackingPose_callback extends Callback {
		byte apply(HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);
	};
	/** <i>native declaration : headers\openvr_capi.h:1945</i> */
	public interface SetWorkingPlayAreaSize_callback extends Callback {
		void apply(float sizeX, float sizeZ);
	};
	/** <i>native declaration : headers\openvr_capi.h:1946</i> */
	public interface SetWorkingCollisionBoundsInfo_callback extends Callback {
		void apply(HmdQuad_t pQuadsBuffer, int unQuadsCount);
	};
	/** <i>native declaration : headers\openvr_capi.h:1947</i> */
	public interface SetWorkingSeatedZeroPoseToRawTrackingPose_callback extends Callback {
		void apply(HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);
	};
	/** <i>native declaration : headers\openvr_capi.h:1948</i> */
	public interface SetWorkingStandingZeroPoseToRawTrackingPose_callback extends Callback {
		void apply(HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);
	};
	/** <i>native declaration : headers\openvr_capi.h:1949</i> */
	public interface ReloadFromDisk_callback extends Callback {
		void apply(int configFile);
	};
	/** <i>native declaration : headers\openvr_capi.h:1950</i> */
	public interface GetLiveSeatedZeroPoseToRawTrackingPose_callback extends Callback {
		byte apply(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);
	};
	/** <i>native declaration : headers\openvr_capi.h:1951</i> */
	public interface SetWorkingCollisionBoundsTagsInfo_callback extends Callback {
		void apply(Pointer pTagsBuffer, int unTagCount);
	};
	/** <i>native declaration : headers\openvr_capi.h:1952</i> */
	public interface GetLiveCollisionBoundsTagsInfo_callback extends Callback {
		byte apply(Pointer pTagsBuffer, IntByReference punTagCount);
	};
	/** <i>native declaration : headers\openvr_capi.h:1953</i> */
	public interface SetWorkingPhysicalBoundsInfo_callback extends Callback {
		byte apply(HmdQuad_t pQuadsBuffer, int unQuadsCount);
	};
	/** <i>native declaration : headers\openvr_capi.h:1954</i> */
	public interface GetLivePhysicalBoundsInfo_callback extends Callback {
		byte apply(HmdQuad_t pQuadsBuffer, IntByReference punQuadsCount);
	};
	/** <i>native declaration : headers\openvr_capi.h:1955</i> */
	public interface ExportLiveToBuffer_callback extends Callback {
		byte apply(Pointer pBuffer, IntByReference pnBufferLength);
	};
	/** <i>native declaration : headers\openvr_capi.h:1956</i> */
	public interface ImportFromBufferToWorking_callback extends Callback {
		byte apply(Pointer pBuffer, int nImportFlags);
	};
	public VR_IVRChaperoneSetup_FnTable() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("CommitWorkingCopy", "RevertWorkingCopy", "GetWorkingPlayAreaSize", "GetWorkingPlayAreaRect", "GetWorkingCollisionBoundsInfo", "GetLiveCollisionBoundsInfo", "GetWorkingSeatedZeroPoseToRawTrackingPose", "GetWorkingStandingZeroPoseToRawTrackingPose", "SetWorkingPlayAreaSize", "SetWorkingCollisionBoundsInfo", "SetWorkingSeatedZeroPoseToRawTrackingPose", "SetWorkingStandingZeroPoseToRawTrackingPose", "ReloadFromDisk", "GetLiveSeatedZeroPoseToRawTrackingPose", "SetWorkingCollisionBoundsTagsInfo", "GetLiveCollisionBoundsTagsInfo", "SetWorkingPhysicalBoundsInfo", "GetLivePhysicalBoundsInfo", "ExportLiveToBuffer", "ImportFromBufferToWorking");
	}
	public VR_IVRChaperoneSetup_FnTable(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends VR_IVRChaperoneSetup_FnTable implements Structure.ByReference {
		
	};
	public static class ByValue extends VR_IVRChaperoneSetup_FnTable implements Structure.ByValue {
		
	};
}
