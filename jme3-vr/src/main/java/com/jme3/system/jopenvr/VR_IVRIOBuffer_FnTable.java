package com.jme3.system.jopenvr;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : headers\openvr_capi.h:2363</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VR_IVRIOBuffer_FnTable extends Structure {
	/** C type : Open_callback* */
	public VR_IVRIOBuffer_FnTable.Open_callback Open;
	/** C type : Close_callback* */
	public VR_IVRIOBuffer_FnTable.Close_callback Close;
	/** C type : Read_callback* */
	public VR_IVRIOBuffer_FnTable.Read_callback Read;
	/** C type : Write_callback* */
	public VR_IVRIOBuffer_FnTable.Write_callback Write;
	/** C type : PropertyContainer_callback* */
	public VR_IVRIOBuffer_FnTable.PropertyContainer_callback PropertyContainer;
	/** <i>native declaration : headers\openvr_capi.h:2358</i> */
	public interface Open_callback extends Callback {
		int apply(Pointer pchPath, int mode, int unElementSize, int unElements, LongByReference pulBuffer);
	};
	/** <i>native declaration : headers\openvr_capi.h:2359</i> */
	public interface Close_callback extends Callback {
		int apply(long ulBuffer);
	};
	/** <i>native declaration : headers\openvr_capi.h:2360</i> */
	public interface Read_callback extends Callback {
		int apply(long ulBuffer, Pointer pDst, int unBytes, IntByReference punRead);
	};
	/** <i>native declaration : headers\openvr_capi.h:2361</i> */
	public interface Write_callback extends Callback {
		int apply(long ulBuffer, Pointer pSrc, int unBytes);
	};
	/** <i>native declaration : headers\openvr_capi.h:2362</i> */
	public interface PropertyContainer_callback extends Callback {
		long apply(long ulBuffer);
	};
	public VR_IVRIOBuffer_FnTable() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("Open", "Close", "Read", "Write", "PropertyContainer");
	}
	/**
	 * @param Open C type : Open_callback*<br>
	 * @param Close C type : Close_callback*<br>
	 * @param Read C type : Read_callback*<br>
	 * @param Write C type : Write_callback*<br>
	 * @param PropertyContainer C type : PropertyContainer_callback*
	 */
	public VR_IVRIOBuffer_FnTable(VR_IVRIOBuffer_FnTable.Open_callback Open, VR_IVRIOBuffer_FnTable.Close_callback Close, VR_IVRIOBuffer_FnTable.Read_callback Read, VR_IVRIOBuffer_FnTable.Write_callback Write, VR_IVRIOBuffer_FnTable.PropertyContainer_callback PropertyContainer) {
		super();
		this.Open = Open;
		this.Close = Close;
		this.Read = Read;
		this.Write = Write;
		this.PropertyContainer = PropertyContainer;
	}
	public VR_IVRIOBuffer_FnTable(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends VR_IVRIOBuffer_FnTable implements Structure.ByReference {
		
	};
	public static class ByValue extends VR_IVRIOBuffer_FnTable implements Structure.ByValue {
		
	};
}
